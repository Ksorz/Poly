using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Runtime;
using System.Runtime.InteropServices;

namespace ConsoleApp
{
    class Program
    {
        /* Задание: Индексированный поиск файлов
         * 
         * Задача: разработать приложение для более быстрого, индексированного поиска файлов по заданному пользователем имени. 
         * Индексирование и поиск выполнять в пределах указанной пользователем папки.
         * 
         * Цели:
         * познакомиться с понятием хеширования,
         * закрепить знания по обработке исключительных ситуаций,
         * вспомнить рекурсию и работу с папками и файлами,
         * вспомнить работу со списками.
         * 
         * Шаг 1. Скачайте архив, распакуйте. Ознакомьтесь с работой образца Demo.exe. программа сначала предлагает ввести имя папки, 
         * чтобы проиндексировать все файлы в этой папке и ее подпапках, а затем предлагает выполнить поиск по заданному имени файла, используя при этом хеш-таблицу.
         * 
         * Шаг 2. Разработайте хеш-функцию для получения хеш-кода входной строки. Хеш-код предполагается - целое число в интервале от 0 до 255 (тип Byte).
         * 
         * Шаг 3. Разработайте функцию формирования хеш-таблицы со списками. Входной аргумент - имя стартовой папки. Результат работы - массив arrRes[0-255], 
         * каждый элемент которого типа List<..>
         * 
         * Шаг 4. Разработайте подпрограмму Main, которая обеспечивает пользовательский интерфейс и логику работы, аналогичную примеру-образцу.
         * 
         * Обязательное условие: при реализации всех указанных выше подпрограмм все нештатные ситуации нужно обрабатывать оператором TRY CATCH:
         * 
         * Отсутствие хеш-кода указанного файла в хеш-таблице
         * Ввод пользователем неверного значения или неверного имени папки
         * Ошибки доступа к элементам файловой системы*/

        static void Main(string[] args)
        {
            
        }
    }
}
