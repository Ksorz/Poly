using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp
{
    class Program
    {
        /*
         * Задание: Лучший преподаватель
         
         * В учебном заведении проводится анкетирование студентов разных групп по качеству работы преподавателей.
         * По результатам анкеты каждого студента с несколькими вопросами в двухмерный массив записывается вещественное
         * число - среднее значение балла по преподавателю. Двухмерный массив типа double [N, M], где N - количество
         * преподавателей, M - количество студентов. M и N не более 1000. Оценки в массиве в интервале от 0 до 5
         * включительно.
         
         * Необходимо разработать функцию, которая ищет лучшего преподавателя - то есть, определяет номер строки массива,
         * в которой среднее по всем значениям максимально. Но для повышения объективности, мы самую высокую и самую
         * низкую оценку по каждой строке исключаем из расчетов.
         * Функция должна вернуть индекс строки в массиве и значение вычисленного среднего.
         
         * Массив для тестирования. Ответ будет 3 и 4.15.
         */
        static void Main(string[] args)
        {
            double[,] arrMarks = {{3.6, 3.1, 2.8, 1, 4, 3.3, 3.2, 3 },
                      {3.5, 3.6, 4.1, 3.9, 3.5, 5, 4, 5 },
                      {2.2, 2.7, 3.1, 3, 4.5, 2.2, 3.1, 3.7},
                      {4.2, 3.4, 3, 4.3, 4.1, 4.6, 4.4, 4.5},
                      {4.7, 4.1, 3.6, 2.1, 2.7, 2, 2.5, 2.7}};

            TheBestPrepod(arrMarks, out int stringNumber, out double bestPrepodRating);
            Console.WriteLine("String index: {0}, Best result: {1}", stringNumber, bestPrepodRating);

            /*
             * Из того, что заметил - будет не самый корректный результат, если несколько преподавателей будут иметь
             * одинаково максимальный результат, алгоритм будет выдавать первый попавшийся в массиве индекс. Можно легко
             * решить, но я уж не стал громоздить ещё код.
             */
        }
        static void TheBestPrepod(double[,] ratings, out int index, out double best)
        {
            // Массив результатов, каждый элемент это результат в соответствующей строке исходного массива
            double[] results = new double[ratings.GetLength(0)]; 

            for (int i = 0; i < ratings.GetLength(0); i++) // Столбцы
            {
                double min = 5; // Будущее минимальное значение в строке
                double max = 0; // Будущее максимальное значение в строке
                double sum = 0; // Будущая сумма баллов

                for (int j = 0; j < ratings.GetLength(1); j++) // Элементы в строках
                {
                    min = ratings[i, j] < min ? ratings[i, j] : min; // Вычисление минимума
                    max = ratings[i, j] > max ? ratings[i, j] : max; // Вычисление максимума
                    sum += ratings[i, j]; // Сумма баллов
                }
                // Заполнение массива результатов на каждой итерации по столбцам, вычисление результата, округление
                results[i] = Math.Round((sum - min - max) / (ratings.GetLength(1) - 2), 2);
            }
            // Лучший препод: результат и индекс строки
            best = results.Max();
            index = Array.IndexOf(results, best);
        }
    }
}
