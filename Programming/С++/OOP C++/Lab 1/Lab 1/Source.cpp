#include <iostream>
#include <climits>
#include <Windows.h>
#include <string>

using namespace std;

/**
 * Лабораторная работа №1
 * по предмету "Технология объектно-ориентированного программирования"
 * по теме "Основы синтаксиса"
 *
 * Цель работы:
 * выработать умения, связанные с нижеперечисленными темами:
 * - понятие о переменной;
 * - понятие о типе данных. Базовые типы данных;
 * - операторы условного выбора;
 * - циклические конструкции;
 * - операция безусловного перехода;
 * - понятие о функции;
 * - работа с потоками ввода\вывода.
 *
 * Методические рекомендации: работа представляет собой исходный текст с
 * пропущенными элементами. В тексте работы сформулированы задания в виде
 * \TODO-комментариев.
 */

 /* TODO №1 Измените объявление функции "belongsToInterval" согласно с описанием.
  */

  /**
   * Проверяет, принадлежит ли значение заданному интервалу.
   *
   * @param x значение, которое следует проверить, на принадлежность заданному
   * интервалу
   * @param bottom верхняя граница интервала
   * @param top нижняя граница интервала
   * @return true, если x принадлежит заданному интервалу. В обратному случае - false.
   */
bool belongsToInterval(int bottop, int top, int x)
{
    return (x >= top && x <= bottop) ? true : false;
}

/* TODO №2 Измените объявления функций "min" согласно с описанием.
 */

 /**
  * Возвращает меньшее из двух вещественных значений.
  *
  * @param a первое значение
  * @param b второе значение
  * @return Меньшее из переданных значений.
  */
double minNumber(float a, float b)
{
    cout << "Float" << endl;
    return (a < b) ? a : b;
}

/**
 * Возвращает меньшее из двух целочисленных значений.
 *
 * @param a первое значение
 * @param b второе значение
 * @return Меньшее из переданных значений.
 */
int minNumber(int a, int b)
{
    cout << "Int" << endl;
    return (a < b) ? a : b;
}

/* TODO №3 Измените объявление функции "order" согласно с описанием.
 */

 /**
  * Возвращает порядок (количество знаков) переданного значения.
  *
  * @param x значение, порядок которого следует определить
  * @return Количество знаков переданного значения.
  */
int order(int x)
{
    int order = 0;

    while (abs(x) >= 10)
    {
        order++;
        x = x / 10;
    }
    return order;
}

/* TODO №4

    Выводит информацию о типах (размер в байтах, максимальное значение, минимальное значение)
    Типы: char, int, short, long, long long
    Размер переменной в байтах - функция/оператор sizeof
    Константы максимальных и минимальных значений определены в файле <climits> (<limits.h>)
*/

void typeInfo()
{
    cout << "Размер в байтах, максимальное и минимальное значениdя для:\n" << endl;
    cout << "char      -- " << sizeof(char) << ", " << std::numeric_limits<char>::min << ", " << std::numeric_limits<char>::max << endl;
    cout << "int       -- " << sizeof(int) << ", " << std::numeric_limits<int>::min << ", " << std::numeric_limits<int>::max << endl;
    cout << "short     -- " << sizeof(short) << ", " << std::numeric_limits<short>::min << ", " << std::numeric_limits<short>::max << endl;
    cout << "long      -- " << sizeof(long) << ", " << std::numeric_limits<long>::min << ", " << std::numeric_limits<long>::max << endl;
    cout << "long long -- " << sizeof(long long) << ", " << std::numeric_limits<long long>::min << ", " << std::numeric_limits<long long>::max << endl;
}

/* TODO №5
*   Внутри функции считываем символ с консоли (cin >> c)
*   Выводим пользователю сам символ и его числовое представление
*
*/
void showLetterCode()
{
    char ch;
    cout << "Введите символ:" << endl;
    cin >> ch;
    cout << "Cимвол и его числовое представление:" << endl;
    cout << "\"" << ch << "\"" << ", " << static_cast<int>(ch) << endl;
}

/**
 * Точка входа в прогармму.
 *
 * @return Результат с которым программа завершила выполнение. 0, если
 * программа завершилась успешно. Значение, отличное от ноля, представляет
 * собой код ошибки или причины сбоя приложения.
 */
int main() {
    setlocale(LC_ALL, "Russian");
    wcout.imbue(locale(".1251"));
    wcin.imbue(locale(".866"));
    /* TODO №11 Реализовать консольное меню для проверки работы каждой функции.
    * В реализации использовать цикл (для "бесконечного" ожидания ввода)
    * Для ветвления в коде использовать switch
    * Пример меню:
    *       Нажмите клавишу для проверки функции:
    *           t - Информация по примитивным типам
    *           m - Минимальное значение из двух аргументов
    *           с - Кодировка символа
                ..
    *           e - Выход из программы
    */

    char choice = '0';
    while (choice != 'q')
    {
        string num1;
        string num2;
        int x;

        cout << "\nВыбираем функцию!\n"
            << "     t - Информация по примитивным типам\n"
            << "     m - Минимальное значение из двух аргументов\n"
            << "     с - Кодировка символа\n"
            << "     i - Интервал\n"
            << "     e - Порядок значения\n"
            << "     q - Выход\n";
        cin >> choice;
        
        switch (choice)
        {
        case 'i':

            int top;
            int bottop;
            cout << "Укажите нижнюю границу интервала (целое число):" << endl;
            cin >> top;
            cout << "Укажите верхнюю границу интервала (целое число):" << endl;
            cin >> bottop;
            cout << "Укажите значение (целое число):" << endl;
            cin >> x;
            if (belongsToInterval(bottop, top, x) == true) { cout << "Гигагерцы считают, что значение лежит в пределах интервала" << endl; }
            else { cout << "Гигагерцы считают, что значение лежит вне пределов интервала" << endl; }
            continue;

        case 'm':
            
            cout << "Введите первое число:" << endl;
            cin >> num1;
            cout << "Введите второе число:" << endl;
            cin >> num2;            

            if (std::stoi(num1) == std::stof(num1) && std::stoi(num2) == std::stof(num2)) {
                cout << "Сложнейшие вычисления говорят, что число " << minNumber(std::stoi(num1), std::stoi(num2)) << " наименьшее из двух!" << endl;
            }
            else {
                cout << "Сложнейшие вычисления говорят, что число " << minNumber(std::stof(num1), std::stof(num2)) << " наименьшее из двух!" << endl;
            }
            continue;
            // Возможно на этом шаге я сделал полную ерунду
            // Не понимаю как иначе подключить использование перегруженной функции для такой задачи
        case 'e':
            
            cout << "Введите целое число:" << endl;
            cin >> x;
            cout << "Компьютер думал и пришёл к ответу, порядок числа " << x << ": " << order(x) << '!' << endl;
            continue;

        case 't':

            typeInfo();
            continue;

        case 'c':

            showLetterCode();
            continue;

        default:
            continue;
        }
    }
}

/* TODO №6 Опишите функцию "belongsToInterval".
* Принимает два целых значения как интервал и одно для сравнения. Возвращает false/true приндалежит ли значение интервалу
*/

/* TODO №7 Опишите функции "minNumber".
* Перегруженная функция, принимает значения int или float. Возвращает наименьшее
*/

/* TODO №8 Опишите функцию "order".
* Принимает целое значение, в цикле делит его на 10, пока модуль значение >= 10. Количество таких итераций равно порядку значения
*/

/* TODO №9 Опишите функцию "typeInfo".
* Просто выводит на экран параметры типов данных
*/

/* TODO №10 Опишите функцию "showLetterCode".
* Принимает char, выводит его числовое значение
*/